- defaults:
    name: entitlement-sat5-base
    description: |
        Purpose: Basic config for entitlement testing.
    concurrent: true
    project-type: pipeline
    dsl: |
        import com.redhat.jenkins.plugins.ci.messaging.MessagingProviderOverrides;
        MessagingProviderOverrides po = new MessagingProviderOverrides('Consumer.rh-jenkins-ci-plugin.cb8a05ac-493c-42ee-9529-0aa113fc35ba.VirtualTopic.qe.ci.>');
        pipeline {{
            agent {{ label "linchpin" }}
            options {{
                timestamps()
                ansiColor('xterm')
            }}
            stages {{
                stage('Preparation') {{
                    steps {{
                        cleanWs()
                        sh '''#!/bin/bash
                            git clone http://git.app.eng.bos.redhat.com/git/entitlement-tests.git

                            if [ -n $Testing_System ]; then
                                # Write $Testing_System into file RESOURCES.txt
                                echo EXISTING_NODES=$Testing_System > RESOURCES.txt

                                # Using the file to transfer variables
                                echo "export PROVISION_STATUS=0" > ./vars.sh
                            fi
                        '''
                    }}
                }}
                stage('Provision') {{
                    when {{ expression {{ env.Testing_System == '' }} }}
                    steps {{
                        sh '''#!/bin/bash
                            source ./vars

                            ### [1] Provision testing system in beaker
                            # Modify PinFile
                            PinFile=./entitlement-tests/CCI/Linchpin/beaker/simple/PinFile
                            if [ $Product_Type = "RHEL8" ]; then
                              sed -i -e "s/DISTRO/$Distro/g" -e "s/ARCH/$Arch/g" -e "s/VARIANT/BaseOS/g" $PinFile
                            else
                              sed -i -e "s/DISTRO/$Distro/g" -e "s/ARCH/$Arch/g" -e "s/VARIANT/$Variant/g" $PinFile
                            fi

                            # Provision testing system in beaker
                            source /home/jenkins/.venv/bin/activate
                            pushd entitlement-tests/
                            linchpin -w ./CCI/Linchpin/beaker/simple -vvvv up
                            PROVISION_STATUS=$?
                            deactivate

                            if [ "$PROVISION_STATUS" == 0 ]; then
                              cat ./CCI/Linchpin/beaker/simple/resources/simple.output
                              Testing_System=`python -c """import json; print json.load(open('./CCI/Linchpin/beaker/simple/resources/simple.output'))['beaker_res'][0]['system']"""`
                              echo EXISTING_NODES=$Testing_System > ../RESOURCES.txt
                            fi
                            popd

                            echo "export PROVISION_STATUS=${{PROVISION_STATUS}}" > ./vars.sh
                        '''

                    }}
                }}
                stage('Testing') {{
                    steps {{
                        sh '''#!/bin/bash
                            source ./vars.sh

                            if [ $PROVISION_STATUS -eq 0 ]; then
                                echo "Succeed to provison testing system in beaker!"

                                ### [2] Prepare testing: Run 'prepare.sh sat5' to
                                ###     export testing system ip into env variable 'System_IP' and replace variables in test case script.
                                pushd entitlement-tests/
                                . prepare.sh sat5
                                PREPARE_STATUS=$?
                                echo PREPARE_STATUS=$PREPARE_STATUS
                                popd

                                if [ $PREPARE_STATUS -eq 0 ]; then

                                    ### [3] Run testing with nosetests
                                    pushd entitlement-tests/
                                    nosetests SAT5/Tests/*.py --with-xunit --nocapture --xunit-file=../nosetests_original.xml
                                    TEST_STATUS=$?
                                    echo TEST_STATUS=$TEST_STATUS
                                    popd

                                    ### [4] Add polarion properties into nosetests.xml
                                    echo "Add polarion properties into nosetests.xml file."
                                    python entitlement-tests/CI/polarion/add_polarion_properties_rhn_sat5.py

                                    if [ $TEST_STATUS -ne 0 ]; then
                                        echo "ERROR: Failed to do testing!"
                                        exit 1
                                    fi
                                else
                                    echo "ERROR: Failed to prepare testing!"
                                    exit 1
                                fi
                            else
                                echo "ERROR: Failed to provision testing system in beaker!"
                                exit 1
                            fi
                        '''
                    }}
                }}
            }}
            post {{
                always {{
                    script {{
                        importPolarionXUnit files: 'nosetests.xml',
                            wait: true,
                            mark: true,
                            excludes: '',
                            defaultExcludes: true,
                            caseSensitive: true,
                            server: 'https://polarion.engineering.redhat.com/polarion/import/xunit',
                            user: 'platformqe_machine',
                            password: hudson.util.Secret.fromString('polarion'),
                            providerName: 'Red Hat UMB',
                            overrides: po,
                            timeout: 60

                        archiveArtifacts artifacts: '*.txt, *.json, *.xml, *.prop, **/redhat.repo, **/**/*.log, **/manifest/*.xml, **/manifest/*.json'
                    }}
                }}
            }}
        }}
