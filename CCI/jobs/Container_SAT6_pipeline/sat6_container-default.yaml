- defaults:
    name: container-base
    description: |
        Purpose: Basic config for entitlement testing.
    concurrent: true
    project-type: pipeline
    dsl: |
        pipeline {{
            agent {{ label "linchpin" }}
            options {{
                timestamps()
                ansiColor('xterm')
            }}
            stages {{
                stage('Preparation'){{
                    steps {{
                        script {{
                            currentBuild.displayName = "Host:${{Product_Type}}-Container:${{Container}}-CDN:${{CDN}}"
                        }}
                        cleanWs()
                        sh '''#!/bin/bash
                            git clone http://git.app.eng.bos.redhat.com/git/entitlement-tests.git

                            if [ -n $Testing_System ]; then
                                # Write $System_IP into file RESOURCES.txt
                                echo EXISTING_NODES=$Testing_System > RESOURCES.txt
                            fi

                            # Using the file to transfer variables
                            echo "export PROVISION_STATUS=0" > ./vars.sh
                        '''
                    }}
                }}
                stage('Provision') {{
                    when {{ expression {{ env.Testing_System == '' }} }}
                    steps {{
                        sh '''#!/bin/bash
                            source ./vars.sh

                            # Modify bkr.json to provision suitable beaker system
                            PinFile=./entitlement-tests/CCI/Linchpin/beaker/simple/PinFile
                            if [ $Product_Type = "RHEL8" ]; then
                              sed -i -e "s/DISTRO/$Distro/g" -e "s/ARCH/$Arch/g" -e "s/VARIANT/BaseOS/g" $PinFile
                            else
                              sed -i -e "s/DISTRO/$Distro/g" -e "s/ARCH/$Arch/g" -e "s/VARIANT/$Variant/g" $PinFile
                            fi

                            # Provision testing system in beaker
                            source /home/jenkins/.venv/bin/activate
                            pushd entitlement-tests/
                            linchpin -w ./CCI/Linchpin/beaker/simple -vvvv up
                            PROVISION_STATUS=$?
                            deactivate

                            if [ "$PROVISION_STATUS" == 0 ]; then
                              cat ./CCI/Linchpin/beaker/simple/resources/simple.output
                              Testing_System=`python -c """import json; print json.load(open('./CCI/Linchpin/beaker/simple/resources/simple.output'))['beaker_res'][0]['system']"""`
                              echo EXISTING_NODES=$Testing_System > ../RESOURCES.txt
                            fi
                            popd

                            echo "export PROVISION_STATUS=${{PROVISION_STATUS}}" > ./vars.sh
                        '''
                    }}
                }}
                stage('Testing') {{
                    steps {{
                        sh '''#!/bin/bash
                            source ./vars.sh

                            if [ "$PROVISION_STATUS" == 0 ]; then
                                echo "Succeed to provison beaker system!"
                                pushd entitlement-tests/
                                # Get and set System_IP
                                . prepare.sh container
                                # Get master_release and minor_release, and write them to enviroment variables
                                release=`python Tools/RemoteSSH_scripts/get_release_info.py`
                                export release=$release
                                master_release=`python -c "import os; print os.environ['release'].split('.')[0]"`
                                minor_release=`python -c "import os; print os.environ['release'].split('.')[1]"`
                                export master_release=$master_release
                                export minor_release=$minor_release

                                # Replace qa@redhat.com's password
                                sed -i "s/prod_password/VHVFhPS5TEG8dud9/g" ./CDN/json/account_info_cdn.json

                                # Run tests with nosetests
                                nosetests ./CDN/Container_Tests/Container_SAT6.py --with-xunit --nocapture --xunit-file=../nosetests_original.xml
                                TEST_STATUS=$?
                                popd

                                # add test properties into nosetests.xml
                                echo Preparing to update and add properies, and generate nosetests.xml file.............
                                python entitlement-tests/CI/polarion/add_polarion_properties_container.py

                                if [ $TEST_STATUS -ne 0 ]; then
                                    echo "ERROR: Failed to do testing!"
                                    exit 1
                                fi
                            else
                                echo "ERROR: Failed to provision beaker system!"
                                exit 1
                            fi
                        '''
                    }}
                }}
            }}
            post {{
                always {{
                    script {{
                        archiveArtifacts artifacts: '*.txt, *.xml, **/**/**/*.log'
                    }}
                }}
            }}
        }}
