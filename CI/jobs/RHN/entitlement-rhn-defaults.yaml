- defaults:
    name: entitlement-rhn-base
    description: |
        Purpose: Basic config for entitlement testing.
    concurrent: true
    scm:
        - git:
            url: 'http://git.app.eng.bos.redhat.com/git/ci-ops-central.git'
            branches:
                - origin/master
            basedir: ci-ops-central
            git-config-name: 'ftan'
            git-config-email: 'ftan@redhat.com'
        - git:
            url: 'http://git.app.eng.bos.redhat.com/git/job-runner.git'
            branches:
                - origin/master
            basedir: job-runner
            git-config-name: 'ftan'
            git-config-email: 'ftan@redhat.com'
        - git:
            url: 'http://git.app.eng.bos.redhat.com/git/entitlement-tests.git'
            branches:
                - origin/master
            basedir: entitlement-tests
            git-config-name: 'ftan'
            git-config-email: 'ftan@redhat.com'
    builders:
        - shell: |
            #!/bin/bash
            # Export testing environment variables
            export Manifest_URL=$Manifest_URL
            export Distro=$Distro
            export Test_Level=$Test_Level
            export RHN=$RHN
            export Variant=$Variant
            export Arch=$Arch
            export Testing_System=$Testing_System

            # Copy polarion property file to path $WORKSPACE/
            cp $WORKSPACE/entitlement-tests/CI/polarion/POLARION_PROPS_RHEL6.txt $WORKSPACE/POLARION_PROPS_RHEL6
            cp $WORKSPACE/entitlement-tests/CI/polarion/POLARION_PROPS_RHEL7.txt $WORKSPACE/POLARION_PROPS_RHEL7

            # Run kinit before provision to avoid the following errors
            # krbV.Krb5Error: (-1765328189, 'No credentials cache found')
            # krbV.Krb5Error: (-1765328188, 'Internal credentials cache error')
            KEYTAB=/etc/jenkins.keytab-rhsm-jenkins.rhev-ci-vms.eng.rdu2.redhat.com
            PRINCIPAL=jenkins/rhsm-jenkins.rhev-ci-vms.eng.rdu2.redhat.com@REDHAT.COM
            kinit -k -t $KEYTAB $PRINCIPAL

            # Run klist before provision to make sure have a valid kerberos ticket
            klist 

            # Modify bkr.json to provision beaker system
            bkr_path=$WORKSPACE/entitlement-tests/CI/config/bkr.json
            sed -i -e "s/DISTRO/$Distro/g" $bkr_path

            if [ -z $Testing_System ]; then
                # Provision testing system in beaker
                $WORKSPACE/ci-ops-central/bootstrap/provision_resources.sh \
                --site=qeos \
                --project_defaults=entitlement-tests/CI/config/project-entitlement-qe-jenkins \
                --topology=entitlement-tests/CI/config/bkr-$Variant_$Arch \
                --ssh_keyfile=entitlement-tests/CI/keys/beaker-keytab-entitlement-qe-jenkins \
                --name=$Distro_$Variant_$Arch
                PROVISION_STATUS=$?
            else
                # Write $Testing_System into file RESOURCES.txt
                echo EXISTING_NODES=$Testing_System > RESOURCES.txt
                PROVISION_STATUS=0
            fi

            if [ $PROVISION_STATUS -eq 0 ]; then
                echo "Succeed to provison beaker system!"
                pushd entitlement-tests/
                . prepare.sh rhn
                PREPARE_STATUS=$?
                echo PREPARE_STATUS=$PREPARE_STATUS
                popd
                if [ $PREPARE_STATUS -eq 0 ]; then 
                    # Run testing with nosetests
                    pushd entitlement-tests/
                    nosetests RHN/Tests/*.py --with-xunit --nocapture --xunit-file=../nosetests.xml
                    TEST_STATUS=$?
                    echo TEST_STATUS=$TEST_STATUS
                    popd
                    if [ $TEST_STATUS -ne 0 ]; then 
                        echo "ERROR: Failed to do testing!"
                        exit 1
                    fi
                else
                    echo "ERROR: Failed to prepare testing!"
                    exit 1
                fi
            else
                echo "ERROR: Failed to provision beaker system!"
                exit 1
            fi

        - inject:
            properties-file: polarion.prop
    publishers:
        - archive:
            artifacts: '*.txt, *.json, *.xml, *.prop, **/redhat.repo, **/**/*.log, **/manifest/*.xml, **/manifest/*.json'
            allow-empty: 'true'
        - ci-polarion-importer:
            files: 'nosetests.xml'
            wait: True
            mark-failed: True
            importer_url: 'https://polarion.engineering.redhat.com/polarion/import/xunit'
            user: 'ftan'
            password: ''
            provider-name: 'Red Hat UMB'
            override-topic: Consumer.rh-jenkins-ci-plugin.cb8a05ac-493c-42ee-9529-0aa113fc35ba.VirtualTopic.qe.ci.>
            timeout: '60'
        - xunit:
            thresholdmode: 'number'
            thresholds:
                - failed:
                    unstable: 0
                    unstablenew: 0
                    failure: 0
                    failurenew: 0
                - skipped:
                    unstable: 0
                    unstablenew: 0
                    failure: 0
                    failurenew: 0
            types:
                - junit:
                    pattern: '*.xml'
                    deleteoutput: false
    wrappers:
        - ansicolor
        - workspace-cleanup
        - timestamps

